// <auto-generated />
using System;
using Instituicao.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Instituicao.Migrations
{
    [DbContext(typeof(InstituicaoDBContext))]
    [Migration("20240827012451_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlunoDisciplina", b =>
                {
                    b.Property<int>("AluDependenciasDisID")
                        .HasColumnType("int");

                    b.Property<int>("DisDependentesAluMatricula")
                        .HasColumnType("int");

                    b.HasKey("AluDependenciasDisID", "DisDependentesAluMatricula");

                    b.HasIndex("DisDependentesAluMatricula");

                    b.ToTable("Dependencia", (string)null);
                });

            modelBuilder.Entity("AlunoTrabalho", b =>
                {
                    b.Property<int>("AluTrabalhosTraID")
                        .HasColumnType("int");

                    b.Property<int>("TraAlunosAluMatricula")
                        .HasColumnType("int");

                    b.HasKey("AluTrabalhosTraID", "TraAlunosAluMatricula");

                    b.HasIndex("TraAlunosAluMatricula");

                    b.ToTable("AlunoTrabalho");
                });

            modelBuilder.Entity("DisciplinaPeriodo", b =>
                {
                    b.Property<int>("DisPeriodosPerID")
                        .HasColumnType("int");

                    b.Property<int>("PerDisciplinasDisID")
                        .HasColumnType("int");

                    b.HasKey("DisPeriodosPerID", "PerDisciplinasDisID");

                    b.HasIndex("PerDisciplinasDisID");

                    b.ToTable("DisciplinaPeriodo");
                });

            modelBuilder.Entity("Instituicao.Models.Aluno", b =>
                {
                    b.Property<int>("AluMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AluMatricula"));

                    b.Property<int?>("PerID")
                        .HasColumnType("int");

                    b.Property<string>("UsuCPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UsuDN")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuTelefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AluMatricula");

                    b.HasIndex("PerID");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Instituicao.Models.Curso", b =>
                {
                    b.Property<int>("CurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurID"));

                    b.Property<string>("CurNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurTotalPeriodos")
                        .HasColumnType("int");

                    b.Property<string>("CurTurno")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurID");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Instituicao.Models.Disciplina", b =>
                {
                    b.Property<int>("DisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisID"));

                    b.Property<int?>("DisHoras")
                        .HasColumnType("int");

                    b.Property<string>("DisNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProMatricula")
                        .HasColumnType("int");

                    b.HasKey("DisID");

                    b.HasIndex("ProMatricula");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("Instituicao.Models.Orientador", b =>
                {
                    b.Property<int>("OrtID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrtID"));

                    b.Property<int>("ProMatricula")
                        .HasColumnType("int");

                    b.HasKey("OrtID");

                    b.HasIndex("ProMatricula")
                        .IsUnique();

                    b.ToTable("Orientadores");
                });

            modelBuilder.Entity("Instituicao.Models.Periodo", b =>
                {
                    b.Property<int>("PerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerID"));

                    b.Property<int>("CurID")
                        .HasColumnType("int");

                    b.Property<int?>("PerNumero")
                        .HasColumnType("int");

                    b.Property<string>("PerSala")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerID");

                    b.HasIndex("CurID");

                    b.ToTable("Periodos");
                });

            modelBuilder.Entity("Instituicao.Models.Professor", b =>
                {
                    b.Property<int>("ProMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProMatricula"));

                    b.Property<string>("UsuCPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UsuDN")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuTelefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProMatricula");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("Instituicao.Models.Trabalho", b =>
                {
                    b.Property<int>("TraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TraID"));

                    b.Property<int?>("DisID")
                        .HasColumnType("int");

                    b.Property<int?>("OrtID")
                        .HasColumnType("int");

                    b.Property<string>("TipoTrabalho")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<double?>("TraNota")
                        .HasColumnType("float");

                    b.Property<string>("TraTitulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TraValor")
                        .HasColumnType("float");

                    b.HasKey("TraID");

                    b.HasIndex("DisID");

                    b.HasIndex("OrtID");

                    b.ToTable("Trabalhos");

                    b.HasDiscriminator<string>("TipoTrabalho").HasValue("Trabalho");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Instituicao.Models.Artigo", b =>
                {
                    b.HasBaseType("Instituicao.Models.Trabalho");

                    b.HasDiscriminator().HasValue("Artigo");
                });

            modelBuilder.Entity("Instituicao.Models.Outro", b =>
                {
                    b.HasBaseType("Instituicao.Models.Trabalho");

                    b.HasDiscriminator().HasValue("Outro");
                });

            modelBuilder.Entity("Instituicao.Models.TCC", b =>
                {
                    b.HasBaseType("Instituicao.Models.Trabalho");

                    b.HasDiscriminator().HasValue("TCC");
                });

            modelBuilder.Entity("AlunoDisciplina", b =>
                {
                    b.HasOne("Instituicao.Models.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("AluDependenciasDisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instituicao.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("DisDependentesAluMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlunoTrabalho", b =>
                {
                    b.HasOne("Instituicao.Models.Trabalho", null)
                        .WithMany()
                        .HasForeignKey("AluTrabalhosTraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instituicao.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("TraAlunosAluMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinaPeriodo", b =>
                {
                    b.HasOne("Instituicao.Models.Periodo", null)
                        .WithMany()
                        .HasForeignKey("DisPeriodosPerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instituicao.Models.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("PerDisciplinasDisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Instituicao.Models.Aluno", b =>
                {
                    b.HasOne("Instituicao.Models.Periodo", "AluPeriodo")
                        .WithMany("PerAlunos")
                        .HasForeignKey("PerID");

                    b.Navigation("AluPeriodo");
                });

            modelBuilder.Entity("Instituicao.Models.Disciplina", b =>
                {
                    b.HasOne("Instituicao.Models.Professor", "DisProfessor")
                        .WithMany("ProDisciplinas")
                        .HasForeignKey("ProMatricula");

                    b.Navigation("DisProfessor");
                });

            modelBuilder.Entity("Instituicao.Models.Orientador", b =>
                {
                    b.HasOne("Instituicao.Models.Professor", "OrtProfessor")
                        .WithOne("ProOrientador")
                        .HasForeignKey("Instituicao.Models.Orientador", "ProMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrtProfessor");
                });

            modelBuilder.Entity("Instituicao.Models.Periodo", b =>
                {
                    b.HasOne("Instituicao.Models.Curso", "PerCurso")
                        .WithMany("CurPeriodos")
                        .HasForeignKey("CurID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerCurso");
                });

            modelBuilder.Entity("Instituicao.Models.Trabalho", b =>
                {
                    b.HasOne("Instituicao.Models.Disciplina", "TraDisciplina")
                        .WithMany("DisTrabalhos")
                        .HasForeignKey("DisID");

                    b.HasOne("Instituicao.Models.Orientador", "TraOrientador")
                        .WithMany("OrtTrabalhos")
                        .HasForeignKey("OrtID");

                    b.Navigation("TraDisciplina");

                    b.Navigation("TraOrientador");
                });

            modelBuilder.Entity("Instituicao.Models.Curso", b =>
                {
                    b.Navigation("CurPeriodos");
                });

            modelBuilder.Entity("Instituicao.Models.Disciplina", b =>
                {
                    b.Navigation("DisTrabalhos");
                });

            modelBuilder.Entity("Instituicao.Models.Orientador", b =>
                {
                    b.Navigation("OrtTrabalhos");
                });

            modelBuilder.Entity("Instituicao.Models.Periodo", b =>
                {
                    b.Navigation("PerAlunos");
                });

            modelBuilder.Entity("Instituicao.Models.Professor", b =>
                {
                    b.Navigation("ProDisciplinas");

                    b.Navigation("ProOrientador");
                });
#pragma warning restore 612, 618
        }
    }
}
